@use '../config/config' as *;
@use '../global/typography' as *;
$config: (
  'color-principal': var(--color-button, var(--color-primary)),
  'color-contrast':  var(--color-button-contrast, var(--color-white)),
  'color-focus': var(--color-focus, var(--color-text)),
  'radius': var(--border-radius-larger),
  'padding': toRem(10) toRem(26) toRem(14),
);

.button,
button,
[type="button"],
[type="submit"],
[type="reset"] {
  position: relative;
  text-decoration: none;
  border-radius: getConfig('radius');
  color: getConfig('color-contrast');
  background-color: getConfig('color-principal');
  display: inline-flex;
  align-items: center;
  padding: getConfig('padding');
  font-family: var(--font-body);
  font-weight: 500;
  line-height: 1.35;
  width: auto;
  border: 2px solid getConfig('color-principal');
  // transition: background-color .15s ease-out, background-image .15s ease-out, border-color .15s ease-out;
  text-align: center;

  &:focus,
  &:active,
  &:hover {
    border-color: var(--color-button-hover, getConfig('color-principal'));
    background: getConfig('color-contrast');
    color: var(--color-button-hover, getConfig('color-principal'));
    outline-color: getConfig('color-focus');
    
    &::before {
      background-color: var(--color-button-hover, getConfig('color-principal'));
    }
  }
}

.button {  
  &--full,
  &--outline {
    @extend .button;
  }

  &--outline {
    background: transparent;
    color: getConfig('color-principal');
    border: 2px solid getConfig('color-principal');

    &:focus,
    &:active,
    &:hover {
      background: getConfig('color-principal');
      color: getConfig('color-contrast');
    }
  }

  &--simple {
    background-color: transparent;
    color: getConfig('color-principal');
    border: none;
    text-decoration: underline;

    &::after {
      background-color: transparent;
      margin-left: .5rem;
    }
    
    &:focus,
    &:active,
    &:hover {
      background: transparent;
      color: getConfig('color-principal');
      outline-color: getConfig('color-focus');
      text-decoration: none;
    }
  }

  &--link,
  &--unstyled {
    @extend a;
    text-decoration: solid underline;
    background-color: transparent;
    border: none;
    font-style: normal;
    padding: 0;
    text-transform: none;
    width: auto;
    transition: none;
    letter-spacing: 0;
    font-size: inherit;

    &:focus,
    &:active,
    &:hover {
      text-decoration: none;
      border-radius: 0;
      background-color: transparent;
      color: unset;
    }
  }

  &--unstyled {
    text-decoration: none;
  }

  &_list {
    display: flex;
    flex-wrap: wrap;
    justify-content: var(--alignment, start);
    gap: var(--gap);
    align-items: center;
    max-width: var(--site-width-small);
    margin: 0 auto;

    @include mq(intermediary) {
      --gap: 1.5rem;
    }
  }
}